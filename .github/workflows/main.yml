name: Deploy Express Service

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Express service instance
        env:
          PRIVATE_KEY: ${{ secrets.EXPRESS_SERVER_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EXPRESS_SERVER_HOST }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # Ensure SSH and SCP are available
          which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
          which scp || ( apt-get update -y && apt-get install openssh-client -y )
          
          eval $(ssh-agent -s)
          ssh-add private_key.pem
          
          # Create directory and copy files
          ssh -o StrictHostKeyChecking=no $HOST "mkdir -p ~/express-service"
          scp -o StrictHostKeyChecking=no -r ./* $HOST:~/express-service/
          
          # Run commands on remote server
          ssh -o StrictHostKeyChecking=no $HOST '
            cd ~/express-service
            npm ci
            pm2 describe app > /dev/null
            if [ $? -eq 0 ]; then
              pm2 restart app
            else
              pm2 start app.js --name app
            fi
          '
          
          rm -f private_key.pem







# name: Deploy Express Service

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: self-hosted
#     steps:
#       - name: Deploy to Express service instance
#         env:
#           PRIVATE_KEY: ${{ secrets.EXPRESS_SERVER_SSH_PRIVATE_KEY }}
#           HOST: ${{ secrets.EXPRESS_SERVER_HOST }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           REPO_URL: ${{ github.server_url }}/${{ github.repository }}
#           BRANCH: ${{ github.ref_name }}
#         run: |
#           echo "$PRIVATE_KEY" > private_key.pem
#           chmod 600 private_key.pem
          
#           ssh -i private_key.pem -o StrictHostKeyChecking=no $HOST '
#             mkdir -p ~/express-service
#             cd ~/express-service

#             # Install GitHub CLI if not present
#             which gh || (
#               sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
#               sudo apt-add-repository https://cli.github.com/packages
#               sudo apt update
#               sudo apt install gh
#             )

#             # Authenticate GitHub CLI
#             echo "$GITHUB_TOKEN" | gh auth login --with-token

#             # Checkout the code
#             gh repo clone $REPO_URL . || (git fetch origin $BRANCH && git checkout $BRANCH && git pull)

#             npm ci
#             pm2 describe app > /dev/null
#             if [ $? -eq 0 ]; then
#               pm2 restart app
#             else
#               pm2 start app.js --name app
#             fi

#             # Clean up
#             gh auth logout
#           '
          
#           rm -f private_key.pem